apiVersion: v1
kind: Service
metadata:
  name: aws-webapp-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: aws-webapp
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
---
apiVersion: eks.amazonaws.com/v1
kind: IngressClassParams
metadata:
  name: alb-params
  namespace: default
spec:
  scheme: internet-facing
  # Tags simplificados para Auto Mode
  tags:
    - key: Environment
      value: production
    - key: Project  
      value: aws-webapp-2025
    - key: CreatedBy
      value: EKS-Auto-Mode
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: alb
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: eks.amazonaws.com/alb
  parameters:
    apiGroup: eks.amazonaws.com
    kind: IngressClassParams
    name: alb-params
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aws-webapp-ingress
  namespace: default
  annotations:
    # Auto Mode annotations simplificadas
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: aws-webapp-alb-automode-2025
    
    # Health check en annotations
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/success-codes: '200'
    
    # Target group attributes
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30,stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=86400
    
    # Load balancer attributes
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60,routing.http2.enabled=true
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aws-webapp-service
            port:
              number: 80